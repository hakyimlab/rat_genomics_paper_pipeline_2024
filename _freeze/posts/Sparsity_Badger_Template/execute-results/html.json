{
  "hash": "bf6ed7a89bd3890eb99e841a935cc14a",
  "result": {
    "markdown": "---\ntitle: \"Sparsity_Badger_Template\"\nauthor: \"natasha.santhanam\"\ndate: \"2022-02-07\"\noutput: workflowr::wflow_html\neditor_options:\n  chunk_output_type: console\n---\n\n\n## Badger script to calculate Sparsity for each gene using Gemma \n\n\n::: {.cell}\n\n```{.bash .cell-code}\n---\ndefinitions:\n\n  # command and template must always be specified.\n  command: gemma\n  template: /gpfs/data/im-lab/nas40t2/Github/badger/examples/PBS_example_template.jinja\n\n  copy_to_item: true\n\n  default_arguments:\n    job_memory: \"4gb\"\n    job_walltime: \"6:00:00\"\n    logs_folder: /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/logs\n    setup: \"module load gcc/6.2.0 \\n module load gemma/0.94 \\n cd /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac \"\n\n  # This specifies what the script does once an individual file is generated.\n  submission:\n    !PBSQueue\n      jobs_folder: /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/jobs\n      job_name_key: job_name # Jobs will be written to job_name.sh files with the generated job_name argument filled in.\n      fake_submission: true # Specifying this just writes the files and does not run a submission command.\n\n  constants:\n    GRM_dir: &GRM_DIR \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/GRMs/\"\n    pheno_file: &PHENO_FILE \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/phenotype_files/\"\n    geno_pref: &GENO_PREF \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/genotype_files/\"\n# There are a lot of different types of arguments, and only a few are shown here.\narguments:\n\n  - !Scalar { name: argument_4, prefix: \"-bslmm\", value: 1 }\n  - !Scalar { name: argument_5, prefix: \"-n\", value: 1 }\n\n  - !FilesInFolder\n    name: argument_1\n    prefix: \"-g\"\n    folder: \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/genotype_files\"\n    regexp_filter: \"geno(.*)\"\n    metadata_rules:\n      - !ExtractFromFileNameRegexpMetadata\n        paths: [ gene_name ]\n\n  - !ArgumentFromMetadata\n    name: argument_2\n    prefix: \"-p\"\n    prepend: *PHENO_FILE\n    format_rule: \"tmp.pheno.{gene_name}\"\n    sources: [ { path: gene_name, destination: gene_name }]\n    \n  - !ArgumentFromMetadata\n    name: argument_3\n    prefix: \"-k\"\n    prepend: *GRM_DIR\n    format_rule: \"grm_Ac_{gene_name}.cXX.txt\"\n    sources: [ { path: gene_name, destination: gene_name }]\n  \n  - !ArgumentFromMetadata\n    name: argument_6\n    prefix: \"-o\"\n    format_rule: \"Ac_out_{gene_name}\"\n    sources: [ { path: gene_name, destination: gene_name }]\n\n  - !ArgumentFromMetadata\n    name: job_name\n    format_rule: \"gemma_sub_Ac-{gene_name}\"\n    sources: [ { path: gene_name, destination: gene_name }]\n              \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}