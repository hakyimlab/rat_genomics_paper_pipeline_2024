{
  "hash": "830499924841551b9c5b46789564f9d0",
  "result": {
    "markdown": "---\ntitle: \"08.Compare_all_PTRS\"\nauthor: \"Natasha Santhanam\"\ndate: \"2/7/2022\"\noutput: html_document\n---\n\n\n\n\n## Sumary PTRS performance vs Individual PTRS in Rats\n\n# Calculate Predicted Height in Rats using Lassosum PTRS weights\n\n\n\n\n Match genes in weights file in humans to Rat expression \n\n\n\n\nFilter for overlap\n\n\n\n\nFilter for Genes with Human Ortholog\n\n\n\n\n\nGenerate predicted values for Height using all models \n\n\n\n\n\nCompare Both Clump and Original Scale weights to Observed Height in Rats\n\n::: {.cell}\n\n```{.r .cell-code}\nclump_height <- readRDS(data.dir %&% \"PTRS_weights/predicted_height_WB_spxcan2ptrs_clump.RDS\")\norig_height <- readRDS(data.dir %&% \"PTRS_weights/predicted_height_WB_spxcan2ptrs_original_scale.RDS\")\n\nweights <- weights %>% select(-c(gene_name))\nn_genes_clump <- as.matrix(apply(weights, 2, function(x) sum(x != 0 )))\n\nweights <- read_tsv(data.dir %&% \"PTRS_weights/weight_files/spxcan2ptrs_original_scale.Standing_height.Whole_Blood.weights.tsv\")\nweights <- weights %>% select(-c(gene_name))\nn_genes_orig <- as.matrix(apply(weights, 2, function(x) sum(x != 0 )))\n\n\npheno <- read_csv(data.dir %&% \"Box_files/processed_obesity_rat_Palmer_phenotypes.csv\") %>% dplyr::select(c(rat_rfid, bmi_bodylength_w_tail, bmi_bodylength_wo_tail, bodylength_w_tail, bodylength_wo_tail, tail_length)) \npheno <- pheno %>% filter(!(rat_rfid  %in% all_rats$ID))\n```\n:::\n\n\nCreate Dataframes with the correlation coefficient between trait in rats and ones predicted using PTRS from Humans\n\n\n\n\n\n# Naive PTRS for Rats\nAlready have weight files for Naive PTRS from G1000 Whole blood models - so just need to multiply by predicted expression in rats\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilelist <- list.files(out.dir %&% \"naive_PTRS/\", pattern = \".tsv\", full.names = TRUE)\n\nfor(fila in filelist) {\nweights <- read_tsv(fila)\nweights$gene = sapply(strsplit(weights$gene, \"\\\\.\"), `[`, 1)\nnaive_pred_height <- fn_generate_trait(pred_expr, weights)\nsaveRDS(naive_pred_height, data.dir %&% \"PTRS_weights/naive_PTRS/naive_PTRS_new_pred_height_\" %&% substr(fila, 113, str_length(fila)-4) %&% \".RDS\")\n}\n```\n:::\n\n\nCalculate Correlation with Observed Height\n\n::: {.cell}\n\n```{.r .cell-code}\nfilelist <- list.files(data.dir %&% \"PTRS_weights/naive_PTRS/\", full.names = TRUE)\nnaive_pred_height <- data.frame(ID = as.character())\n\nfor(fila in filelist) {\n  df <- as.data.frame(readRDS(fila)) %>% mutate(ID = rownames(df)) \n  colnames(df)[1] <- substr(fila, 100, str_length(fila)- 4)\n  naive_pred_height <- full_join(naive_pred_height, df, by = \"ID\")\n}\n\ntempo <- naive_pred_height[na.omit(match(bodylength_w_tail$rat_rfid, naive_pred_height$ID)), ]\n\nnaive_height <- data.frame(estimate = numeric(), pvalue = numeric(), conf.int.min = numeric(), conf.int.max = numeric(), model = character() )\ntempo <- tempo %>% select(-c(ID))\n\nfor(i in 1:ncol(tempo)) {\n  naive_height[i,1] <- cor.test(bodylength_w_tail$bodylength_w_tail, tempo[,i])$estimate\n  naive_height[i,2] <- cor.test(bodylength_w_tail$bodylength_w_tail, tempo[,i])$p.value\n  naive_height[i,3] <- cor.test(bodylength_w_tail$bodylength_w_tail, tempo[,i])$conf.int[1]\n  naive_height[i,4] <- cor.test(bodylength_w_tail$bodylength_w_tail, tempo[,i])$conf.int[2]\n  naive_height[i,5] <- colnames(tempo)[i]\n}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}