{
  "hash": "e6a9ec2c0206cc929fff40b075eb89ba",
  "result": {
    "markdown": "---\ntitle: \"09.PRS_Rats\"\nauthor: \"Natasha Santhanam\"\ndate: \"5/4/2022\"\noutput: html_document\n---\n\n\n\n\n## Run PRSice in Rats \n\n# Run GWAS in rats for bodylength\n\nfirst extract out 500 random rats that we'll use as baseline\n\n::: {.cell}\n\n```{.r .cell-code}\nfam <- fread(geno.dir %&% \"Box_files/rat_genotypes_LD_pruned_0.95/plink_format/rat_metabolic_impute.fam\")\nall_names <- fread(geno.dir %&% \"Box_files/all_names.txt\")\n\nfam <- fam %>% filter(!(V2 %in% all_names$ID))\nbase_ref <- data.frame(FID = sample(fam$V2, 500)) %>% mutate(ID = FID)\nwrite_tsv(base_ref, geno.dir %&% \"PTRS_weights/PRSice_Rats/PRSice_rats_reference_names.txt\", col_names = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n# remove any overlap of training rats\nexport DIR=/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/PTRS_weights/PRSice_Rats/\nplink --bfile rat_metabolic_impute --remove $DIR/all_training_rats.txt  --make-bed --out rat_metabolic_abrv\n\n#remove 500 rats that will later be used in baseline reference\nplink --bfile rat_metabolic_abrv --remove $DIR/PRSice_rats_reference_names.txt --make-bed --out $DIR/rat_metabolic_PRSice\n\n#create plink files for reference\nplink --bfile rat_metabolic_abrv --keep $DIR/PRSice_rats_reference_names.txt --make-bed --out $DIR/rat_reference_PRSice\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfam <- read.table(DIR %&% \"/rat_metabolic_PRSice.fam\")\npheno <- read_tsv(geno.dir %&% \"Box_files/processed_obesity_rat_Palmer_phenotypes.tsv\") %>% select(c(rat_rfid, bodylength_w_tail))\npheno_all <- pheno[na.omit(match(fam$V1, pheno$rat_rfid)),]\n\npheno_all <- pheno_all %>% mutate(ID = rat_rfid, .before = \"rat_rfid\")\nwrite_tsv(pheno_all, DIR %&% \"bodylength_phenotype_PRSice.phe\", col_names = FALSE)\n\npheno_ref <- pheno[na.omit(match(base_ref$FID, pheno$rat_rfid)),] \npheno_ref <- pheno_ref %>% mutate(IID = pheno_ref$rat_rfid, .before = \"rat_rfid\")\nwrite_tsv(pheno_ref, DIR %&% \"bodylength_phenotype_ref_PRSice.phe\", col_names = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\nplink --bfile rat_metabolic_PRSice --pheno bodylength_phenotype_PRSice.phe --assoc --out PRSIce_bodylength_assoc\n```\n:::\n\n\n# Run PRSice\n\n::: {.cell}\n\n```{.r .cell-code}\ngwas <- fread(geno.dir %&% \"PTRS_weights/PRSice_Rats/PRSIce_bodylength_assoc.qassoc\")\nbim <- fread(geno.dir %&% \"PTRS_weights/PRSice_Rats/rat_metabolic_PRSice.bim\")\n\n#table(bim$V2 == gwas$SNP)\ngwas <- gwas %>% mutate(A1 = bim$V5, .before = \"BP\")\nwrite_tsv(gwas, \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/PTRS_weights/PRSice_Rats/PRSIce_bodylength_assoc_imputed.text\",  col_names = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n PRSice --base PRSIce_bodylength_assoc_imputed.text \\\n    --snp SNP \\\n    --chr CHR \\\n    --bp BP \\\n    --pvalue P \\\n    --A1 A1 \\\n    --binary-target F \\\n    --beta \\\n    --stat BETA \\\n    --target rat_reference_PRSice  \\\n    --pheno bodylength_phenotype_ref_PRSice.phe \\\n    --out rat_metabolic_PRSice\n```\n:::\n\n\n\n# Evaluate performance of PRSice\n\nPlot performance as a function of pvalue threshold\n\n::: {.cell}\n\n```{.r .cell-code}\nprsice_perf <- read_tsv(dir %&% \"rat_metabolic_PRSice.prsice\", col_names = TRUE)\nggplot(prsice_perf, aes(-log10(Threshold), -log10(P))) + geom_point()\n```\n:::\n\nCheck Correlation between observed bodylength and PRS from PRSice\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprs <- fread(dir %&% \"rat_metabolic_PRSice.best\")\n\nall_rats <- read_tsv(dir %&% \"all_names.txt\", col_names = TRUE)\npheno <- read_csv(dir %&% \"processed_obesity_rat_Palmer_phenotypes.csv\") %>% dplyr::select(c(rat_rfid, bodylength_w_tail))\npheno <- pheno %>% filter(!(rat_rfid  %in% all_rats$ID))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npheno_height <- pheno[na.omit(match(prs$FID, pheno$rat_rfid)),] %>% na.omit()\n\ntempo <- prs[na.omit(match(pheno$rat_rfid, prs$FID)),]\ntempo <- tempo[match(pheno_height$rat_rfid, tempo$FID), ]\n\nPRSice_height <- data.frame(estimate = numeric(), pvalue = numeric(), conf.int.min = numeric(), conf.int.max = numeric() )\n \n  PRSice_height[1,1] <- cor.test(pheno_height$bodylength_w_tail, tempo$PRS)$estimate\n  PRSice_height[1,2] <- cor.test(pheno_height$bodylength_w_tail, tempo$PRS)$p.value\n  PRSice_height[1,3] <- cor.test(pheno_height$bodylength_w_tail, tempo$PRS)$conf.int[1]\n  PRSice_height[1,4] <- cor.test(pheno_height$bodylength_w_tail, tempo$PRS)$conf.int[2]\n```\n:::\n\n\n\n# Test PTRS PRS as a weighted sum\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nptrs_height <- readRDS(dir %&% \"rat_pred_height_w_Human_best_PTRS.RDS\") %>% as.data.frame()  %>% select(c(model_35)) \nptrs_height <- ptrs_height %>% mutate(FID = rownames(ptrs_height), .before = \"model_35\")\n\nptrs_height <- ptrs_height[na.omit(match(prs$FID, ptrs_height$FID)), ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprs_ptrs_df <- data.frame(matrix(NA, nrow = 500, ncol = 10))\nratios = seq(0.1, 1.0, 0.1)\nfor(i in 1:10) {\n   index <- ratios[i]\n   prs_ptrs_df[,i] <- (prs$PRS*index)+(ptrs_height$model_35*(1-index))\n   colnames(prs_ptrs_df)[i] = paste(\"PRS\", index, sep = \"_\")\n}\nprs_ptrs_df <- prs_ptrs_df %>% mutate(FID = prs$FID, .before = colnames(prs_ptrs_df)[1])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npheno_height <- pheno_height[match(prs_ptrs_df$FID, pheno_height$rat_rfid), ]\n\nprs_ptrs_cor <- data.frame(cor = numeric(), pvalue = numeric(), model = character(), conf.int.min = numeric(), conf.int.max = numeric())\nfor(j in 2:ncol(prs_ptrs_df)) {\n  prs_ptrs_cor[j-1, 1] <- cor.test(pheno_height$bodylength_w_tail, prs_ptrs_df[,j])$estimate\n  prs_ptrs_cor[j-1, 2] <- cor.test(pheno_height$bodylength_w_tail, prs_ptrs_df[,j])$p.value\n  prs_ptrs_cor[j-1, 3] <- colnames(prs_ptrs_df)[j]\n  prs_ptrs_cor[j-1, 4] <- cor.test(pheno_height$bodylength_w_tail, prs_ptrs_df[,j])$conf.int[1]\n  prs_ptrs_cor[j-1, 5] <- cor.test(pheno_height$bodylength_w_tail, prs_ptrs_df[,j])$conf.int[2]\n}\n```\n:::\n\n\n# Plot PRS vs PTRS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprs_ptrs_cor$model = as.numeric(sapply(strsplit(prs_ptrs_cor$model, \"_\"), `[`, 2))\nfull_ptrs_cor =  bodylength_w_tail_cor %>% filter(model == \"model_35\") %>% select(-c(n_genes_in_model))\nfull_ptrs_cor$model = 0\n\nprs_ptrs_cor <- rbind(prs_ptrs_cor, full_ptrs_cor)\nprs_ptrs_cor <- prs_ptrs_cor %>% mutate(type_model = c(\"PTRS+PRS\", \"PTRS+PRS\", \"PTRS+PRS\", \"PTRS+PRS\", \"PTRS+PRS\", \"PTRS+PRS\", \"PTRS+PRS\", \"PTRS+PRS\", \"PTRS+PRS\", \"PRS only\", \"PTRS only\"))\n\nggplot(prs_ptrs_cor, aes(model, cor))  + geom_errorbar(aes(ymin = conf.int.min, ymax = conf.int.max ), width=0.2,  color=\"gray48\") + geom_point(col = ifelse(prs_ptrs_cor$type_model == \"PTRS only\", \"dodgerblue2\", \"black\")) + ylab(\"Correlation Coefficient (r)\") + xlab(\"Weight of PRS\")\n```\n:::\n\n\ncorrelation between PRS and PTRS\n\n::: {.cell}\n\n```{.r .cell-code}\nptrs <- readRDS(dir %&% \"rat_pred_height_w_Human_best_PTRS.RDS\") \nptrs <- ptrs[na.omit(match(prs$FID, rownames(ptrs))), ]\ncor.test(prs$PRS, ptrs[,36])\n\nsummary(lm(pheno_height$bodylength_w_tail ~ prs$PRS + ptrs[,36]))\n\nsummary(lm(formula = pheno_height$bodylength_w_tail ~ prs$PRS))\n\nsummary(lm(formula = pheno_height$bodylength_w_tail ~ ptrs[,36]))\n\n\nbodylength_w_tail <- pheno %>% dplyr::select(c(rat_rfid, bodylength_w_tail)) %>% na.omit()\ntempo <- pred_height[na.omit(match(bodylength_w_tail$rat_rfid, rownames(pred_height))), ]\nall_ptrs <- data.frame(PTRS = tempo[,36], pheno = bodylength_w_tail$bodylength_w_tail)\nall_ptrs <- all_ptrs %>% mutate(test_set = ifelse(rownames(all_ptrs) %in% pheno_height$rat_rfid, \"TRUE\", \"FALSE\"))\n\nggplot(all_ptrs, aes(PTRS, pheno)) + geom_point(col = ifelse(all_ptrs$test_set == \"TRUE\", \"blue\", \"black\")) + geom_smooth(color = \"darkgrey\") \n\n\nprs <- prs %>% select(c(FID, PRS))\nptrs_best_genes <- as.data.frame(pred_height) %>% mutate(FID = rownames(pred_height), .before = \"model_0\") %>% select(c(FID, \"model_34\")) %>% rename(PTRS_best_genes = model_34)\nbodylength <- pheno %>% select(c(rat_rfid, bodylength_w_tail)) %>% rename(FID = rat_rfid)\n\nptrs_all_genes <- readRDS(dir %&% \"rat_pred_height_PTRS.RDS\") \nptrs_all_genes <- ptrs_all_genes %>% data.frame() %>% mutate(FID = rownames(ptrs_all_genes), .before = \"model_0\") %>% select(c(FID, \"model_34\")) %>% filter(!(FID  %in% all_rats$ID)) %>% rename(PTRS_all_genes= model_34)\n\nall_ptrs <- full_join(ptrs_all_genes, ptrs_best_genes, by = \"FID\")\nprs_pheno <- full_join(prs, bodylength, by = \"FID\")\n\nall_tibbles <- full_join(all_ptrs, prs_pheno, by = \"FID\")\n```\n:::\n",
    "supporting": [
      "09.PRS_Rats_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}