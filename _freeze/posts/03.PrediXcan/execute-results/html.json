{
  "hash": "d819d081af404bd1f172a35aadd6ab1f",
  "result": {
    "markdown": "---\ntitle: \"03.PrediXcan_MultiXcan\"\nauthor: \"Natasha Santhanam\"\ndate: \"2/7/2022\"\noutput: html_document\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(data.table)\nlibrary(RSQLite)\nlibrary(qqman)\nlibrary(ggrepel)\nlibrary(devtools)\ndevtools::source_gist(\"0ddc9c0ea03245bb30efbe3e899897be\")\n\"%&%\" = function(a,b) paste(a,b,sep=\"\")\nargs = commandArgs(trailingOnly=TRUE)\ngeno.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/Box_files/rat_genotypes_LD_pruned_0.95/\"\n```\n:::\n\n\n## Run PrediXcan with Metabolic Phenotype Data\n\n# Create model with right column names for PrediXcan (do for all 5 tissues)\n\nSabrina's note: I have no idea what is going on here, I don't know where bimbam file came from. I tried running this script from genotype files generated from previous steps in the pipeline, but it seems like a different file was inputed below. We may be able to ignore this step for now, since we already have PrediXcan formatted genotype from an earlier step in the pipeline.\n\n::: {.cell}\n\n```{.r .cell-code}\nfilelist <- list.files(geno.dir, pattern = \".bimbam\")\n#ids for rats are in the phenotype file under rat_rfid\n\nfor(file in filelist) {\n  tempo <- fread(geno.dir %&% file)\n  tempo <- tempo %>% mutate(chr =  numextract(sapply(strsplit(tempo$V1, \":\"), `[`, 1)), .before = V1) %>% mutate(pos = numextract(sapply(strsplit(tempo$V1, \":\"), `[`, 2)), .before = V2) %>% mutate(maf = 0, .before = V4)\n  write_tsv(tempo, geno.dir %&% substr(file, 1, nchar(file) - 7) %&% \".txt\", col_names = FALSE)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntis = \"Ac\"\ndata.dir <- \"/Users/sabrinami/Github/Rat_Genomics_Paper_Pipeline/Results/\"\nfilename <-  data.dir %&% \"sql/\" %&% tis %&% \"_output_db.db\"\nsqlite.driver <- dbDriver(\"SQLite\")\nconn <- dbConnect(RSQLite::SQLite(), filename)\nextra <- dbGetQuery(conn, 'select * from extra')\nweights <- dbGetQuery(conn, 'select * from weights')\ndbDisconnect(conn)\nextra <- extra %>% select(c(gene, genename, n.snps, R2, pval)) %>% mutate(pred.perf.qval = NA) \ncolnames(extra) <- c(\"gene\", \"genename\", \"n.snps.in.model\", \"pred.perf.R2\", \"pred.perf.pval\", \"pred.perf.qval\")\ncor_df <- read_tsv(data.dir %&% \"all_results_\" %&% tis, col_names = TRUE) %>% select(c(gene, cvm))\n\nextra <- extra %>% filter(pred.perf.R2 > 0.01)\n\nextra <- full_join(extra, cor_df, by = \"gene\")\nextra <- extra %>% filter(cvm >= 0 | is.na(cvm)) %>% select(-c(cvm)) %>% filter(!is.na(pred.perf.R2))\nweights <- weights %>% filter(gene %in% extra$gene)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_db = data.dir %&% \"sql/\" %&% tis %&% \"_best_prediXcan_db.db\"\nconn <- dbConnect(RSQLite::SQLite(), model_db)\ndbWriteTable(conn, \"weights\", weights)\ndbWriteTable(conn, \"extra\", extra)\n\n#check to see model is set up \ndbListTables(conn)\ndbGetQuery(conn, 'SELECT * FROM weights') %>% head\ndbGetQuery(conn, 'SELECT * FROM extra') %>% head\ndbDisconnect(conn)\n```\n:::\n\n\nNote: I don't know how these files were generated.\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples <- read_tsv(GENO %&% \"samples_Rat_metab_phenos_file\", col_names = FALSE)\nall_rats <- read_tsv(PHENO %&% \"all_names.txt\", col_names = TRUE)\nsamples <- samples %>% filter(!(X1  %in% all_rats$ID))\nwrite_tsv(samples, GENO %&% \"samples_Rat_metab_abrv_phenos_file\", col_names = FALSE)\n```\n:::\n\n\n\n# Do for all 5 tissues \n\n::: {.cell}\n\n```{.bash .cell-code}\n#run prediXcan\nconda activate imlabtools\nMETAXCAN=/Users/sabrinami/Github/MetaXcan/software\nGENO=/Users/sabrinami/Box/imlab-data/data-Github/Rat_Genomics_Paper_Pipeline/data/rat_genotypes_LD_pruned_0.95\nMODEL=/Users/sabrinami/Box/imlab-data/data-Github/Rat_Genomics_Paper_Pipeline/Results/sql\nOUTPUT=/Users/sabrinami/Box/imlab-data/data-Github/Rat_Genomics_Paper_Pipeline/Results/PrediXcan/metabolic_traits/\n\npython $METAXCAN/Predict.py \\\n--model_db_path $MODEL/Ac_best_prediXcan_db.db \\\n--text_genotypes \\\n $GENO/chr*.round2_impute2_3473.txt  \\\n--on_the_fly_mapping METADATA \"{}_{}_{}_{}\" \\\n--text_sample_ids $GENO/samples_Rat_metab_phenos_file \\\n--prediction_output $OUTPUT/rat_metabolic_Ac_best__predict.txt  \\\n--prediction_summary_output $OUTPUT/rat_metabolic_Ac_best__summary.txt \\\n--throw\n```\n:::\n\n\nNote: Stop here, we have all the results needed to continue to PTRS analysis.\n\n::: {.cell}\n\n```{.r .cell-code}\npred_expr <- read_tsv(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/prediXcan/metabolic_traits/rat_metabolic_\" %&% tis %&% \"_best__predict.txt\", col_names = TRUE)\n\nall_rats <- read_tsv(PHENO %&% \"all_names.txt\", col_names = TRUE)\npred_expr <- pred_expr %>% filter(!(FID  %in% all_rats$ID))\n\n#write_tsv(pred_expr, \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/prediXcan/metabolic_traits/rat_metabolic_\" %&% tis %&% \"_best__predict.txt\", col_names = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#run asssociation in prediXcan\nPHENO = \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/Box_files/\"\nRESULTS = \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/prediXcan/metabolic_traits/associations/\"\n\npheno <- read_csv(PHENO %&% \"processed_obesity_rat_Palmer_phenotypes.csv\", col_names = TRUE) %>% filter(!(rat_rfid  %in% all_rats$ID))\nwrite_tsv(pheno, PHENO %&% \"processed_obesity_rat_Palmer_phenotypes_target_set.tsv\", col_names = TRUE)\n\nfor(i in 2:length(colnames(pheno))){\ntrait <- colnames(pheno)[i]\nrunLOC <- \"python3 \" %&% METAXCAN %&% \"/PrediXcanAssociation.py \" %&% \"--expression_file \" %&%  \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/prediXcan/metabolic_traits/rat_metabolic_\" %&% \"Ac\" %&% \"__predict.txt --input_phenos_file \" %&% PHENO %&% \"processed_obesity_rat_Palmer_phenotypes_target_set.tsv \" %&% \"--input_phenos_column \" %&% trait %&%  \" --output \" %&% RESULTS %&% \"associations/\" %&% \"Ac\" %&% \"__association_\" %&% trait %&% \".txt --verbosity 9 --throw\"\nsystem(runLOC)\n}\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\nRscript --vanilla /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/prediXcan/metabolic_trait_assoc_all_tis.R $tissue\n\nqsub -v tissue=$tis metabolic_assoc_all_tissues.pbs\n```\n:::\n\n\nFormat and Plot PrediXcan Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresults.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/prediXcan/metabolic_traits/associations\"\nfilelist <- list.files(results.dir, pattern = \"Ac__association_\", full.names = TRUE)\nfull_df <- data.frame()\n\nfor(fila in filelist) {\n  assoc_fila <- read_tsv(fila, col_names = TRUE)\n  pheno_id <- substr(fila, 104, (str_length(fila) - 4))\n  tempo <- cbind(assoc_fila, metabolic_trait=pheno_id) %>% select(-c(status))\n  full_df <- rbind(full_df, tempo)\n} \n#full_df <- read_tsv(\"/Users/natashasanthanam/Github/rat-genomic-analysis/data/rat_metabolic_traits_best_Ac_full_assocs.txt\", col_names = TRUE)\n\ntempo_df <- full_df %>% filter(pvalue <  9.279881e-06)\n\n#428 sig genes\ntempo_df %>% group_by(gene) %>% summarise(n = n())\n\n#all 11 traits\ntempo_df %>% group_by(metabolic_trait) %>% summarise(n = n())\n```\n:::\n\n\nFilter prediXcan results for Supplementary Table\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_df <- full_df %>% filter(metabolic_trait == \"bmi_bodylength_w_tail\"|metabolic_trait ==  \"bodylength_w_tail\"| metabolic_trait == \"bodyweight\" | metabolic_trait == \"fasting_glucose\" | metabolic_trait == \"epifat\" |  metabolic_trait == \"retrofat\" | metabolic_trait == \"parafat\")\n\nfull_df <- full_df %>% mutate(gene_name = orth.rats[match(full_df$gene, orth.rats$rnorvegicus_homolog_ensembl_gene),4]$rnorvegicus_homolog_associated_gene_name, .before = effect)\n\nfull_df$metabolic_trait[full_df$metabolic_trait == \"bmi_bodylength_w_tail\" ] <- \"Body Mass Index (BMI) with tail\"\nfull_df$metabolic_trait[full_df$metabolic_trait == \"bodylength_w_tail\" ] <- \"Body length including tail\"\nfull_df$metabolic_trait[full_df$metabolic_trait == \"bodyweight\" ] <- \"Body weight\"\nfull_df$metabolic_trait[full_df$metabolic_trait == \"fasting_glucose\" ] <- \"Fasting Glucose\"\nfull_df$metabolic_trait[full_df$metabolic_trait == \"epifat\" ] <- \"Epididymal fat\"\nfull_df$metabolic_trait[full_df$metabolic_trait == \"retrofat\" ] <- \"Retroperitoneal fat\"\nfull_df$metabolic_trait[full_df$metabolic_trait == \"parafat\" ] <- \"Parametrial fat\"\n\nfull_df <- full_df %>% mutate(bf_sig = ifelse(full_df$pvalue <= 9.279881e-06, \"Yes\", \"No\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhuman_height_genes <- read_tsv(\"/Users/natashasanthanam/Downloads/Human_phenomeXcan_all_traits.txt\", col_names = TRUE)\nhuman_height_genes <- human_height_genes %>% mutate(rat_gene = orth.rats[match(human_height_genes$gene_name, orth.rats$external_gene_name), 4]$rnorvegicus_homolog_associated_gene_name) %>% filter(pvalue_Height <= 0.01)\n\n\nhuman_bmi_genes <- read_tsv(\"/Users/natashasanthanam/Downloads/Human_phenomeXcan_all_traits.txt\", col_names = TRUE) \ncolnames(human_bmi_genes)[2] = \"pvalue_BMI\"\nhuman_bmi_genes <- human_bmi_genes %>% mutate(rat_gene = orth.rats[match(human_bmi_genes$gene_name, orth.rats$external_gene_name), 4]$rnorvegicus_homolog_associated_gene_name) %>% filter(pvalue_BMI <= 0.01 )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngene_annot <- readRDS(\"/Users/natashasanthanam/Github/rat-genomic-analysis/data/gene_annotation.RDS\") %>% select(c(\"chr\", \"gene_id\", \"start\", \"end\")) %>% rename(gene = gene_id)\n\ntempo_manhatt <- inner_join(gene_annot, full_df, by = \"gene\")\ntempo_manhatt$chr <- as.numeric(tempo_manhatt$chr)\n\nbmi_manhat <- tempo_manhatt %>% filter(metabolic_trait == \"Body Mass Index (BMI) with tail\") \nbmi_manhat <- bmi_manhat %>% mutate(gene_name = orth.rats[match(bmi_manhat$gene, orth.rats$rnorvegicus_homolog_ensembl_gene), 4]$rnorvegicus_homolog_associated_gene_name)\n\nheight_manhat <- tempo_manhatt %>% filter(metabolic_trait == \"Body length including tail\") \nheight_manhat <- height_manhat %>% mutate(gene_name = orth.rats[match(height_manhat$gene, orth.rats$rnorvegicus_homolog_ensembl_gene), 4]$rnorvegicus_homolog_associated_gene_name)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_cum <- bmi_manhat %>% \n  group_by(chr) %>% \n  summarise(max_bp = as.numeric(max(start))) %>% \n  mutate(bp_add = lag(cumsum(max_bp), default = 0)) %>% \n  select(chr, bp_add)\n\ngwas_data <- bmi_manhat %>% \n  inner_join(data_cum, by = \"chr\") %>% \n  mutate(bp_cum = start + bp_add)\n\n\naxis_set <- gwas_data %>% \n  group_by(chr) %>% \n  summarize(center = mean(bp_cum))\n\nylim <- gwas_data %>% \n  filter(pvalue == min(pvalue)) %>% \n  mutate(ylim = abs(floor(log10(pvalue))) + 2) %>% \n  pull(ylim)\n\nsig <-  0.05/(5388)\n\nbmi_manhplot <- ggplot(gwas_data, aes(x = bp_cum, y = -log10(pvalue), \n                                  color = as_factor(chr), size = -log10(pvalue))) +\n  geom_hline(yintercept = -log10(sig), color = \"grey40\", linetype = \"dashed\") + \n  geom_hline(yintercept = -log10(0.0001), color = \"red\", linetype = \"dashed\") + \n  geom_point(alpha = 0.75, shape = ifelse((gwas_data$zscore >= 4.863456), 17, ifelse(gwas_data$zscore <= -4.863456, 25, 19)), fill = \"dodgerblue4\") +\n  geom_label_repel(aes(label=ifelse((pvalue <=  sig & gene_name %in% human_bmi_genes$rat_gene), gene_name, \"\")), size = 6) + \n  ylim(c(0,8)) + \n  scale_x_continuous(label = axis_set$chr, breaks = axis_set$center) +\n  scale_color_manual(values = rep(c(\"dodgerblue4\", \"midnightblue\"), unique(length(axis_set$chr)))) +\n  scale_size_continuous(range = c(0.5,3)) +\n  labs(x = NULL, \n       y = expression(-log[10](italic(p)))) + \n  theme_minimal() +\n  theme( \n    legend.position = \"none\",\n    panel.border = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    axis.text.x = element_text(angle = 90, size = 12), \n    axis.text.y = element_text( size = 12,  vjust = 0), \n    axis.title = element_text(size = 20))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_cum <- height_manhat %>% \n  group_by(chr) %>% \n  summarise(max_bp = as.numeric(max(start))) %>% \n  mutate(bp_add = lag(cumsum(max_bp), default = 0)) %>% \n  select(chr, bp_add)\n\ngwas_data <- height_manhat %>% \n  inner_join(data_cum, by = \"chr\") %>% \n  mutate(bp_cum = start + bp_add)\n\n\naxis_set <- gwas_data %>% \n  group_by(chr) %>% \n  summarize(center = mean(bp_cum))\n\nylim <- gwas_data %>% \n  filter(pvalue == min(pvalue)) %>% \n  mutate(ylim = abs(floor(log10(pvalue))) + 2) %>% \n  pull(ylim)\n\nsig <-   0.05/(5388)\n\nheight_manhplot <- ggplot(gwas_data, aes(x = bp_cum, y = -log10(pvalue), \n                                  color = as_factor(chr), size = -log10(pvalue))) +\n  geom_hline(yintercept = -log10(sig), color = \"grey40\", linetype = \"dashed\") + \n  geom_hline(yintercept = -log10(0.0001), color = \"red\", linetype = \"dashed\") + \n  geom_point(alpha = 0.75, shape = ifelse((gwas_data$zscore >= 4.863456), 17, ifelse(gwas_data$zscore <= -4.863456, 25, 19)), fill = \"dodgerblue4\") +\n  geom_label_repel(aes(label=ifelse((pvalue <=  sig & gene_name %in% human_height_genes$rat_gene), gene_name, \"\")), size = 6) + \n  ylim(c(0,10)) + \n  scale_x_continuous(label = axis_set$chr, breaks = axis_set$center) +\n  scale_color_manual(values = rep(c(\"dodgerblue4\", \"midnightblue\"), unique(length(axis_set$chr)))) +\n  scale_size_continuous(range = c(0.5,3)) +\n  labs(x = NULL, \n       y = expression(-log[10](italic(p)))) + \n  theme_minimal() +\n  theme( \n    legend.position = \"none\",\n    panel.border = element_blank(),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    axis.text.x = element_text(angle = 90, size = 12), \n    axis.text.y = element_text( size = 12,  vjust = 0), \n    axis.title = element_text(size = 20))\n```\n:::\n\n\n\n\n## Run MultiXcan\n\n# Generate Folder with Predicted Expression Data for each Tissue\n\nFirst have to remove potential overlap between genotypes used in predicted expression and those in phenotype file. Should only be around 60ish so not too big a deal\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilelist <- list.files(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/expression\", pattern = \".RDS\", full.names = TRUE)\nall_names <- data.frame(ID = as.character())\nfor(fila in filelist) {\n  tempo <- readRDS(fila)\n  tempo <- as.data.frame(rownames(tempo)) %>% rename(ID = `rownames(tempo)`)\n  all_names <- full_join(tempo, all_names, by = \"ID\")\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npheno <- read_csv(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/Box_files/processed_obesity_rat_Palmer_phenotypes.csv\", col_names=TRUE)\n\npheno <- pheno %>% rename(ID = rat_rfid) %>% filter(!ID %in% all_names$ID)\n```\n:::\n\n\n\nNext have to remove overlap rats predicted expression as well\n\n::: {.cell}\n\n```{.r .cell-code}\nfilelist <- list.files(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/prediXcan/metabolic_traits/\", pattern = \"__predict.txt\", full.names = TRUE)\n\nfor(fila in filelist) {\n  tempo <- fread(fila, header=TRUE)\n  name <- substr(fila, 90,91)\n  tempo <- tempo %>% filter(!FID %in% all_names$ID)\n  tempo <- tempo[match(pheno$ID, tempo$FID),]\n  write_tsv(tempo, \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/MultiXcan/expr/\" %&% name %&% \".txt\")\n}\n```\n:::\n\n\n\nRun MultiXcan using the predicted expression from prediXcan across all 5 tissues to boost power\n\n::: {.cell}\n\n```{.bash .cell-code}\n#!/bin/bash\n\n#PBS -N multixcan\n#PBS -S /bin/bash\n#PBS -l walltime=4:00:00\n#PBS -l mem=4gb\n#PBS -l nodes=1:ppn=1\n\n# SPECIFY LOGGING BEHAVIOR\n\n#PBS -o /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/MultiXcan/logs/${PBS_JOBNAME}.${PBS_JOBID}.log\n#PBS -e /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/MultiXcan/logs/${PBS_JOBNAME}.${PBS_JOBID}.err\n\nmodule load gcc/6.2.0\nsource ~/.bashrc \nconda activate /gpfs/data/im-lab/nas40t2/bin/envs/tensorqtl/\n\necho \"MultiXcan running on epifat\"\n\npython /gpfs/data/im-lab/nas40t2/natasha/GTEX_Analysis/MetaXcan/software/MulTiXcan.py \\\n        --expression_folder /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/MultiXcan/expr \\\n        --expression_pattern \"(.*).txt\" \\\n        --input_phenos_file /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/MultiXcan/metabolic_trait_phenos_MultiXcan.txt \\\n        --input_phenos_column bmi_bodylength_wo_tail \\\n        --output /gpfs/data/im-lab/nas40t2/natasha/rat_genomics/MultiXcan/results/bmi_bodylength_wo_tail_predict_assoc.txt \\\n        --pc_condition_number 10 \\\n        --mode linear \\\n        --verbosity 8 \\\n        --throw\n```\n:::\n\n\n\n# Add Zscore to MutliXcan\n\nCalculate most significant  Zscore across all tisuses\nFor each trait find most significant pvalue and take sign of that effect\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheno <- read_csv(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/Box_files/processed_obesity_rat_Palmer_phenotypes.csv\", col_names=TRUE)\n\nfor(i in 2:ncol(pheno)) {\n  trait <- colnames(pheno)[i]\n  filelist <- list.files(data.dir %&% \"prediXcan/metabolic_traits/associations/\", pattern = trait %&% \".txt\", full.names = TRUE)\n  tempo <- data.frame(gene= as.character())\n  for(fila in filelist) {\n    tis <- substr(fila, 89, 90)\n    df <- read_tsv(fila) %>% select(c(gene, effect, pvalue)) \n    new_eff <- paste(\"effect\", tis, sep = \"_\")\n    new_pval <- paste(\"pvalue\", tis, sep = \"_\")\n    colnames(df)[2] <- new_eff\n    colnames(df)[3] <- new_pval \n    \n   tempo <- full_join(tempo, df,  by = \"gene\")\n  }\n  most_sig = rowMins(as.matrix(tempo[,c(3,5,7,9,11)]))\n  \n  Ac <- tempo[na.omit(match(most_sig, tempo$pvalue_Ac)), c(1,2)] %>% rename(effect = effect_Ac )\n  Il <- tempo[na.omit(match(most_sig, tempo$pvalue_Il)), c(1,4)] %>% rename(effect = effect_Il )\n  Lh <- tempo[na.omit(match(most_sig, tempo$pvalue_Lh)), c(1,6)] %>% rename(effect = effect_Lh )\n  Pl <- tempo[na.omit(match(most_sig, tempo$pvalue_Pl)), c(1,8)] %>% rename(effect = effect_Pl )\n  Vo <- tempo[na.omit(match(most_sig, tempo$pvalue_Vo)), c(1,10)] %>% rename(effect = effect_Vo )\n  \n  df <- rbind(Ac, Il, Lh, Pl, Vo) \n  df <- df %>% mutate(sign = sign(effect))\n  write_tsv(df, data.dir %&% \"prediXcan/metabolic_traits/associations/most_sig_zscores/\" %&% trait %&% \"_avg_zscore.txt\", col_names = FALSE)\n}\n```\n:::\n\n\nLoci Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::source_gist(\"50a2bdc64e103e8321fefb9e712aa137\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngene_annot <- readRDS(\"/Users/natashasanthanam/Github/rat-genomic-analysis/data/gene_annotation.RDS\") %>% select(c(chr, gene_id, gene_name, start, end))\nheight_loci <- full_df %>% filter(metabolic_trait == \"Body length including tail\") %>% filter(pvalue <= 9.279881e-06)\n\nheight_loci <- inner_join(gene_annot, height_loci %>% select(c(gene, pvalue)) %>% rename(gene_id = gene), by = \"gene_id\")\nheight_loci$chr = as.numeric(height_loci$chr)\nheight_loci <-  height_loci[order(height_loci$chr),]\n\nheight_distinct_loci <- fn_count_distinct_loci(height_loci)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbmi_loci <- full_df %>% filter(metabolic_trait == \"Body Mass Index (BMI) with tail\") %>% filter(pvalue <= 9.279881e-06)\n\nbmi_loci <- inner_join(gene_annot, bmi_loci %>% select(c(gene, pvalue)) %>% rename(gene_id = gene), by = \"gene_id\")\nbmi_loci$chr = as.numeric(bmi_loci$chr)\nbmi_loci <-  bmi_loci[order(bmi_loci$chr),]\n\nbmi_distinct_loci <- fn_count_distinct_loci(bmi_loci)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}