{
  "hash": "dd2ef28c0c3b4f4268d3bd799e7773ee",
  "result": {
    "markdown": "---\ntitle: \"01.Heritability_Sparsity Sabrina\"\nauthor: [\"natasha.santhanam\", \"Sabrina\"]\ndate: \"2022-02-07\"\noutput: workflowr::wflow_html\neditor_options:\n  chunk_output_type: console\n---\n\n\n# Generate Heritability and Sparsity Estimates for all 5 tissues\n\n## Definitions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nge.dir <- \"/Users/sabrinami/Github/Rat_Genomics_Paper_Pipeline/data/\"\n\"%&%\" = function(a,b) paste(a,b,sep=\"\")\n```\n:::\n\n\n## Calculate Cis Heritability within 1MB\n\nFor each gene, we calculate heritability from its local GRM. Start with creating list of genes for each of the gene expression file:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"~/Box/imlab-data/Projects/PTRS-PGRS-Rosetta/Data-From-Abe-Palmer-Lab/Rdata/genoGex.RData\")\n\nensidlist <- gexAc$EnsemblGeneID\nensidlist_Il <- gexIl$EnsemblGeneID\nensidlist_Lh <- gexLh$EnsemblGeneID\nensidlist_Pl <- gexPl$EnsemblGeneID\nensidlist_Vo <- gexVo$EnsemblGeneID\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in bim files for each tissue\nbimfile <- ge.dir %&% \"rat_genome_Ac.bim\" ###get SNP position information###\nbimfile_Lh <- ge.dir %&% \"rat_genome_Lh.bim\"\nbimfile_Il <- ge.dir %&% \"rat_genome_Il.bim\"\nbimfile_Pl <- ge.dir %&% \"rat_genome_Pl.bim\"\nbimfile_Vo <- ge.dir %&% \"rat_genome_Vo.bim\"\n\nbim <- read.table(bimfile)\nbim_Lh <- read.table(bimfile_Lh)\nbim_Il <- read.table(bimfile_Il)\nbim_Pl <- read.table(bimfile_Pl)\nbim_Vo <- read.table(bimfile_Vo)\n\nrownames(bim) <- bim$V2\nrownames(bim_Lh) <- bim_Lh$V2\nrownames(bim_Il) <- bim_Il$V2\nrownames(bim_Pl) <- bim_Pl$V2\nrownames(bim_Vo) <- bim_Vo$V2\n```\n:::\n\n\nWe run gcta Ac plink files and gene annotation to generate local GRMs, then h2 calculations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngt.dir <- \"/Users/sabrinami/Github/Rat_Genomics_Paper_Pipeline/output/Ac/\"\npheno.dir <- gt.dir %&% \"phenotype_files/\"\ngrm.dir <- gt.dir %&% \"GRMs/\"\nh2.dir <- gt.dir %&% \"h2_output/\"\n\n#Make local GRMs for each gene\nfor(i in 1:length(ensidlist)){\n    cat(i,\"/\",length(ensidlist),\"\\n\")\n    gene <- ensidlist[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <-geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bim,bim[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,4]>=start & chrsnps[,4]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,2]    \n    write.table(snplist, file= gt.dir %&% \"tmp.Ac.SNPlist\",quote=FALSE,col.names=FALSE,row.names=FALSE)\n    runGCTAgrm <- \"gcta --bfile \" %&%  ge.dir %&% \"rat_genome_Ac --make-grm-bin --extract \" %&% gt.dir %&% \"tmp.Ac.SNPlist\" %&% \" --out \" %&% grm.dir %&%  gene\n    system(runGCTAgrm)\n}\n\n#Calculate h2\nfor(i in 1:length(ensidlist)){\n\tcat(i,\"of\",length(ensidlist),\"\\n\")\n\tensid <- ensidlist[i]\n\tgene <- as.character(gtf[match(ensid, gtf$Gene),10])\n\tchr <- as.character(gtf[match(ensid, gtf$Gene),1])\n  individuals <- colnames(gexAc)[c(-1)]\n  expression <- as.character(gexAc[i,c(-1)])\n\t#output expression pheno for gcta\n\tgeneexp <- data.frame(\n\t  famid = individuals,\n\t  id = individuals,\n\t  expr = expression\n\t)\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% ensid, col.names=FALSE, row.names = FALSE, quote=FALSE) #output pheno for gcta\n\t## Y ~ localGRM\n\trunLOC <- \"gcta --grm \" %&% grm.dir %&% ensid %&% \" --reml --pheno \" %&% pheno.dir %&% \"tmp.pheno.\" %&% ensid %&% \" --out \" %&% h2.dir %&% \"tmp.\" %&% ensid\n\tsystem(runLOC)\n}\n```\n:::\n\n\nRepeat for Il:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngt.dir <- \"/Users/sabrinami/Github/Rat_Genomics_Paper_Pipeline/output/Il/\"\npheno.dir <- gt.dir %&% \"phenotype_files/\"\ngrm.dir <- gt.dir %&% \"GRMs/\"\nh2.dir <- gt.dir %&% \"h2_output/\"\n\n#Make local GRMs for each gene\nfor(i in 1:length(ensidlist_Il)){\n    cat(i,\"/\",length(ensidlist_Il),\"\\n\")\n    gene <- ensidlist_Il[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <-geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bim_Il,bim_Il[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,4]>=start & chrsnps[,4]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,2]    \n    write.table(snplist, file= gt.dir %&% \"tmp.Il.SNPlist\",quote=FALSE,col.names=FALSE,row.names=FALSE)\n    runGCTAgrm <- \"gcta --bfile \" %&%  ge.dir %&% \"rat_genome_Il --make-grm-bin --extract \" %&% gt.dir %&% \"tmp.Il.SNPlist\" %&% \" --out \" %&% grm.dir %&%  gene\n    system(runGCTAgrm)\n}\n\n#Calculate h2\nfor(i in 1:length(ensidlist_Il)){\n\tcat(i,\"of\",length(ensidlist_Il),\"\\n\")\n\tensid <- ensidlist_Il[i]\n\tgene <- as.character(gtf[match(ensid, gtf$Gene),10])\n\tchr <- as.character(gtf[match(ensid, gtf$Gene),1])\n  individuals <- colnames(gexIl)[c(-1)]\n  expression <- as.character(gexIl[i,c(-1)])\n\t#output expression pheno for gcta\n\tgeneexp <- data.frame(\n\t  famid = individuals,\n\t  id = individuals,\n\t  expr = expression\n\t)\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% ensid, col.names=FALSE, row.names = FALSE, quote=FALSE) #output pheno for gcta\n\t## Y ~ localGRM\n\trunLOC <- \"gcta --grm \" %&% grm.dir %&% ensid %&% \" --reml --pheno \" %&% pheno.dir %&% \"tmp.pheno.\" %&% ensid %&% \" --out \" %&% h2.dir %&% \"tmp.\" %&% ensid\n\tsystem(runLOC)\n}\n```\n:::\n\n\nLh:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngt.dir <- \"/Users/sabrinami/Github/Rat_Genomics_Paper_Pipeline/output/Lh/\"\npheno.dir <- gt.dir %&% \"phenotype_files/\"\ngrm.dir <- gt.dir %&% \"GRMs/\"\nh2.dir <- gt.dir %&% \"h2_output/\"\n\n#Make local GRMs for each gene\nfor(i in 1:length(ensidlist_Lh)){\n    cat(i,\"/\",length(ensidlist_Lh),\"\\n\")\n    gene <- ensidlist_Lh[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <-geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bim_Lh,bim_Lh[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,4]>=start & chrsnps[,4]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,2]    \n    write.table(snplist, file= gt.dir %&% \"tmp.Lh.SNPlist\",quote=FALSE,col.names=FALSE,row.names=FALSE)\n    runGCTAgrm <- \"gcta --bfile \" %&%  ge.dir %&% \"rat_genome_Lh --make-grm-bin --extract \" %&% gt.dir %&% \"tmp.Lh.SNPlist\" %&% \" --out \" %&% grm.dir %&%  gene\n    system(runGCTAgrm)\n}\n\n#Calculate h2\nfor(i in 1:length(ensidlist_Lh)){\n\tcat(i,\"of\",length(ensidlist_Lh),\"\\n\")\n\tensid <- ensidlist_Lh[i]\n\tgene <- as.character(gtf[match(ensid, gtf$Gene),10])\n\tchr <- as.character(gtf[match(ensid, gtf$Gene),1])\n  individuals <- colnames(gexLh)[c(-1)]\n  expression <- as.character(gexLh[i,c(-1)])\n\t#output expression pheno for gcta\n\tgeneexp <- data.frame(\n\t  famid = individuals,\n\t  id = individuals,\n\t  expr = expression\n\t)\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% ensid, col.names=FALSE, row.names = FALSE, quote=FALSE) #output pheno for gcta\n\t## Y ~ localGRM\n\trunLOC <- \"gcta --grm \" %&% grm.dir %&% ensid %&% \" --reml --pheno \" %&% pheno.dir %&% \"tmp.pheno.\" %&% ensid %&% \" --out \" %&% h2.dir %&% \"tmp.\" %&% ensid\n\tsystem(runLOC)\n}\n```\n:::\n\n\nPl:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngt.dir <- \"/Users/sabrinami/Github/Rat_Genomics_Paper_Pipeline/output/Pl/\"\npheno.dir <- gt.dir %&% \"phenotype_files/\"\ngrm.dir <- gt.dir %&% \"GRMs/\"\nh2.dir <- gt.dir %&% \"h2_output/\"\n\n#Make local GRMs for each gene\nfor(i in 1:length(ensidlist_Pl)){\n    cat(i,\"/\",length(ensidlist_Pl),\"\\n\")\n    gene <- ensidlist_Pl[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <-geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bim_Pl,bim_Pl[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,4]>=start & chrsnps[,4]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,2]    \n    write.table(snplist, file= gt.dir %&% \"tmp.Pl.SNPlist\",quote=FALSE,col.names=FALSE,row.names=FALSE)\n    runGCTAgrm <- \"gcta --bfile \" %&%  ge.dir %&% \"rat_genome_Pl --make-grm-bin --extract \" %&% gt.dir %&% \"tmp.Pl.SNPlist\" %&% \" --out \" %&% grm.dir %&%  gene\n    system(runGCTAgrm)\n}\n\n#Calculate h2\nfor(i in 1:length(ensidlist_Pl)){\n\tcat(i,\"of\",length(ensidlist_Pl),\"\\n\")\n\tensid <- ensidlist_Pl[i]\n\tgene <- as.character(gtf[match(ensid, gtf$Gene),10])\n\tchr <- as.character(gtf[match(ensid, gtf$Gene),1])\n  individuals <- colnames(gexPl)[c(-1)]\n  expression <- as.character(gexPl[i,c(-1)])\n\t#output expression pheno for gcta\n\tgeneexp <- data.frame(\n\t  famid = individuals,\n\t  id = individuals,\n\t  expr = expression\n\t)\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% ensid, col.names=FALSE, row.names = FALSE, quote=FALSE) #output pheno for gcta\n\t## Y ~ localGRM\n\trunLOC <- \"gcta --grm \" %&% grm.dir %&% ensid %&% \" --reml --pheno \" %&% pheno.dir %&% \"tmp.pheno.\" %&% ensid %&% \" --out \" %&% h2.dir %&% \"tmp.\" %&% ensid\n\tsystem(runLOC)\n}\n```\n:::\n\n\nVo\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngt.dir <- \"/Users/sabrinami/Github/Rat_Genomics_Paper_Pipeline/output/Vo/\"\npheno.dir <- gt.dir %&% \"phenotype_files/\"\ngrm.dir <- gt.dir %&% \"GRMs/\"\nh2.dir <- gt.dir %&% \"h2_output/\"\n\n#Make local GRMs for each gene\nfor(i in 1:length(ensidlist_Vo)){\n    cat(i,\"/\",length(ensidlist_Vo),\"\\n\")\n    gene <- ensidlist_Vo[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <-geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bim_Vo,bim_Vo[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,4]>=start & chrsnps[,4]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,2]    \n    write.table(snplist, file= gt.dir %&% \"tmp.Vo.SNPlist\",quote=FALSE,col.names=FALSE,row.names=FALSE)\n    runGCTAgrm <- \"gcta --bfile \" %&%  ge.dir %&% \"rat_genome_Vo --make-grm-bin --extract \" %&% gt.dir %&% \"tmp.Vo.SNPlist\" %&% \" --out \" %&% grm.dir %&%  gene\n    system(runGCTAgrm)\n}\n\n#Calculate h2\nfor(i in 1:length(ensidlist_Vo)){\n\tcat(i,\"of\",length(ensidlist_Vo),\"\\n\")\n\tensid <- ensidlist_Vo[i]\n\tgene <- as.character(gtf[match(ensid, gtf$Gene),10])\n\tchr <- as.character(gtf[match(ensid, gtf$Gene),1])\n  individuals <- colnames(gexVo)[c(-1)]\n  expression <- as.character(gexVo[i,c(-1)])\n\t#output expression pheno for gcta\n\tgeneexp <- data.frame(\n\t  famid = individuals,\n\t  id = individuals,\n\t  expr = expression\n\t)\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% ensid, col.names=FALSE, row.names = FALSE, quote=FALSE) #output pheno for gcta\n\t## Y ~ localGRM\n\trunLOC <- \"gcta --grm \" %&% grm.dir %&% ensid %&% \" --reml --pheno \" %&% pheno.dir %&% \"tmp.pheno.\" %&% ensid %&% \" --out \" %&% h2.dir %&% \"tmp.\" %&% ensid\n\tsystem(runLOC)\n}\n```\n:::\n\n\n# Calculate Sparsity Estimates for all 5 tissues\n\nThe following code uses `bim_bam` files generated through Palmer lab data, steps [here](convert_genotypes_old.Rmd). The code\n\nAc\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheno.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/phenotype_files/\"\nge.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/genotype_files/\"\nbim.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/bim_bam/\"\n#Read in bimbam file \nbimbamfile <- bim.dir %&% \"Ac_bimbam\" ###get SNP position information###\nbimbam <- read.table(bimbamfile)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Ac/\")\nfor(i in 1:length(ensidlist)){\n    cat(i,\"/\",length(ensidlist),\"\\n\")\n    gene <- ensidlist[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <- geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bimbam, bimbam[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,2]>=start & chrsnps[,2]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,3:ncol(cissnps)]\n    write.table(snplist, file= ge.dir %&% \"tmp.Ac.geno\" %&% gene, quote=F,col.names=F,row.names=F)\n\n    geneexp <- cbind(gexAc_transpose[,i])\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% gene, col.names=F, row.names = F, quote=F) #output pheno for gemma\n    runGEMMAgrm <- \"gemma -g \" %&%  ge.dir %&% \"tmp.Ac.geno\" %&% gene %&% \" -p \" %&% pheno.dir %&% \"tmp.pheno.\" %&%  gene  %&%  \" -gk -o grm_Ac_\" %&% gene\n    system(runGEMMAgrm)\n}\n```\n:::\n\n\nIl\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheno.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Il/phenotype_files/\"\nge.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Il/genotype_files/\"\nbim.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Il/bim_bam/\"\n#Read in bimbam file \nbimbamfile <- bim.dir %&% \"Il_bimbam\" ###get SNP position information###\nbimbam <- read.table(bimbamfile)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Il/\")\nfor(i in 1:length(ensidlist)){\n    cat(i,\"/\",length(ensidlist),\"\\n\")\n    gene <- ensidlist[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <- geneinfo[1]\n    c <- chr$Chr \n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bimbam, bimbam[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,2]>=start & chrsnps[,2]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,3:ncol(cissnps)]    \n    write.table(snplist, file= ge.dir %&% \"tmp.Il.geno\" %&% gene, quote=F,col.names=F,row.names=F)\n    \n    geneexp <- cbind(gexIl_transpose[,i])\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% gene, col.names=F, row.names = F, quote=F) #output pheno for gemma\n    runGEMMAgrm <- \"gemma -g \" %&%  ge.dir %&% \"tmp.Il.geno\" %&% gene %&% \" -p \" %&% pheno.dir %&% \"tmp.pheno.\" %&%  gene  %&%  \" -gk -o grm_Il_\" %&% gene\n    system(runGEMMAgrm)\n}\n```\n:::\n\n\nLh\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheno.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Lh/phenotype_files/\"\nge.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Lh/genotype_files/\"\nbim.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Lh/bim_bam/\"\n#Read in bimbam file \nbimbamfile <- bim.dir %&% \"Lh_bimbam\" ###get SNP position information###\nbimbam <- read.table(bimbamfile)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Lh/\")\nfor(i in 1:length(ensidlist)){\n    cat(i,\"/\",length(ensidlist),\"\\n\")\n    gene <- ensidlist[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <- geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bimbam, bimbam[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,2]>=start & chrsnps[,2]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,3:ncol(cissnps)]    \n    write.table(snplist, file= ge.dir %&% \"tmp.Lh.geno\" %&% gene, quote=F,col.names=F,row.names=F)\n    \n    geneexp <- cbind(gexLh_transpose[,i])\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% gene, col.names=F, row.names = F, quote=F) #output pheno for gemma\n    runGEMMAgrm <- \"gemma -g \" %&%  ge.dir %&% \"tmp.Lh.geno\" %&% gene %&% \" -p \" %&% pheno.dir %&% \"tmp.pheno.\" %&%  gene  %&%  \" -gk -o grm_Lh_\" %&% gene\n    system(runGEMMAgrm)\n}\n```\n:::\n\n\nPl\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheno.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Pl/phenotype_files/\"\nge.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Pl/genotype_files/\"\nbim.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Pl/bim_bam/\"\n#Read in bimbam file \nbimbamfile <- bim.dir %&% \"Pl_bimbam\" ###get SNP position information###\nbimbam <- read.table(bimbamfile)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Pl/\")\nfor(i in 1:length(ensidlist)){\n    cat(i,\"/\",length(ensidlist),\"\\n\")\n    gene <- ensidlist[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <- geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bimbam, bimbam[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,2]>=start & chrsnps[,2]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,3:ncol(cissnps)]    \n    write.table(snplist, file= ge.dir %&% \"tmp.Pl.geno\" %&% gene, quote=F,col.names=F,row.names=F)\n    \n    geneexp <- cbind(gexPl_transpose[,i])\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% gene, col.names=F, row.names = F, quote=F) #output pheno for gemma\n    runGEMMAgrm <- \"gemma -g \" %&%  ge.dir %&% \"tmp.Pl.geno\" %&% gene %&% \" -p \" %&% pheno.dir %&% \"tmp.pheno.\" %&%  gene  %&%  \" -gk -o grm_Pl_\" %&% gene\n    system(runGEMMAgrm)\n}\n```\n:::\n\n\nVo\n\n\n::: {.cell}\n\n```{.r .cell-code}\npheno.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Vo/phenotype_files/\"\nge.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Vo/genotype_files/\"\nbim.dir <- \"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Vo/bim_bam/\"\n#Read in bimbam file \nbimbamfile <- bim.dir %&% \"Vo_bimbam\" ###get SNP position information###\nbimbam <- read.table(bimbamfile)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/GEMMA/Vo/\")\nfor(i in 1:length(ensidlist)){\n    cat(i,\"/\",length(ensidlist),\"\\n\")\n    gene <- ensidlist[i]\n    geneinfo <- gtf[match(gene, gtf$Gene),]\n    chr <- geneinfo[1]\n    c <- chr$Chr\n    start <- geneinfo$Start - 1e6 ### 1Mb lower bound for cis-eQTLS\n    end <- geneinfo$End + 1e6 ### 1Mb upper bound for cis-eQTLs\n    chrsnps <- subset(bimbam, bimbam[,1]==c) ### pull snps on same chr\n    cissnps <- subset(chrsnps,chrsnps[,2]>=start & chrsnps[,2]<=end) ### pull cis-SNP info\n    snplist <- cissnps[,3:ncol(cissnps)]    \n    write.table(snplist, file= ge.dir %&% \"tmp.Vo.geno\" %&% gene, quote=F,col.names=F,row.names=F)\n    \n    geneexp <- cbind(gexVo_transpose[,i])\n\twrite.table(geneexp, file= pheno.dir %&% \"tmp.pheno.\" %&% gene, col.names=F, row.names = F, quote=F) #output pheno for gemma\n    runGEMMAgrm <- \"gemma -g \" %&%  ge.dir %&% \"tmp.Vo.geno\" %&% gene %&% \" -p \" %&% pheno.dir %&% \"tmp.pheno.\" %&%  gene  %&%  \" -gk -o grm_Vo_\" %&% gene\n    system(runGEMMAgrm)\n}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}