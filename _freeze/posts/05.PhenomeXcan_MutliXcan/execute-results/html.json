{
  "hash": "d409966392c913f1300f2d956b802bce",
  "result": {
    "markdown": "---\ntitle: \"05.PhenomeXcan_MultiXcan.Rmd\"\nauthor: \"Natasha Santhanam\"\ndate: \"2/14/2022\"\noutput: html_document\n---\n\n---\ntitle: \"PhenomeXcan Query\"\nauthor: \"Natasha Santhanam\"\ndate: \"10/12/2021\"\noutput: html_document\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressPackageStartupMessages(source(data.dir %&% \"helpers.R\", chdir = TRUE))\nphenomexcan_con <- get_db()\ndbListTables(phenomexcan_con)\n```\n:::\n\n\n## query PhenomeXcan association with top phenotypes for list of genes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput = list()\ninput$pheno = c(\"Obesity\")\ninput$limit = 30000\nobesity_genes <-  suppressMessages(get_results_from_data_db(input))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninput = list()\ninput$pheno = c(\"Body fat percentage\")\ninput$limit = 30000\nbody_fat_genes <- suppressMessages(get_results_from_data_db(input))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninput = list()\ninput$pheno = c(\"Body mass index (BMI) (21001_raw)\")\ninput$limit = 30000\nBMI_genes <- suppressMessages(get_results_from_data_db(input))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninput = list()\ninput$pheno = c(\"Fasting Glucose\")\ninput$limit = 30000\nglucose_genes <- suppressMessages(get_results_from_data_db(input))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninput = list()\ninput$pheno = c(\"Height\")\ninput$limit = 30000\nheight_genes <- suppressMessages(get_results_from_data_db(input))\n```\n:::\n\n\n\nGenerate a table of all human MultiXcan results\n\n::: {.cell}\n\n```{.r .cell-code}\n#matrix - humans (rows are genes and columns are traits (fat, BMI, Obesity))\nlistphenos <- list(BMI_genes, body_fat_genes, obesity_genes, glucose_genes, height_genes)\npheno_Multi_humans <- data_frame(gene_name = as.character())\n\nfor(l in listphenos) {\n  trait <- l$phenotype[1]\n  tempo <- l %>% dplyr::select(c(gene_name, pvalue))\n  colnames(tempo)[2] = paste(\"pvalue\", trait, sep=\"_\")\n  pheno_Multi_humans <- full_join(pheno_Multi_humans, tempo, by = \"gene_name\")\n}\n\n\nhuman_genes <- as.data.frame(pheno_Multi_humans$gene_name)\n\n#pheno_humans <- as.matrix(pheno_humans %>% dplyr::select(-c(gene_name)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhuman = useEnsembl(biomart='ensembl', dataset=\"hsapiens_gene_ensembl\", mirror = \"uswest\")\n#human = useMart(\"ensembl\", dataset = \"hsapiens_gene_ensembl\", mirror = \"uswest\")\nattributes <- listAttributes(human)\n\nattributes = c(\"ensembl_gene_id\", \"external_gene_name\", \"rnorvegicus_homolog_ensembl_gene\", \"rnorvegicus_homolog_associated_gene_name\")\north.rats = getBM(attributes, filters=\"with_rnorvegicus_homolog\",values=TRUE, mart = human, uniqueRows=TRUE)\n\nhuman_genes <- human_genes %>% dplyr::rename(external_gene_name = `pheno_Multi_humans$gene_name`)\nhuman_genes <- inner_join(human_genes, orth.rats, by = \"external_gene_name\") %>% dplyr::select(c(external_gene_name, rnorvegicus_homolog_associated_gene_name))\n```\n:::\n\n\nGenerate a table of all rat MultiXcan results\n\n::: {.cell}\n\n```{.r .cell-code}\nfilelist <- list.files(\"/gpfs/data/im-lab/nas40t2/natasha/rat_genomics/MultiXcan/results\", pattern = \"assoc.txt\",full.names = TRUE)\n\npheno_Multi_rat<- data_frame(gene = as.character())\nfor(fila in filelist) {\n  trait <- substr(fila, 66, str_length(fila)-18)\n  tempo <- fread(fila) %>% select(c(gene, pvalue))\n  colnames(tempo)[2] = paste(\"pvalue\", trait, sep=\".\")\n  pheno_Multi_rat<- full_join(pheno_Multi_rat, tempo, by = \"gene\")\n}\n\n#pheno_Multi_rat <- read_tsv(\"/Users/natashasanthanam/Downloads/rat_metabolic_MultiXcan_pval_assoc.txt\", col_names = TRUE)\n\npheno_Multi_rat <- pheno_Multi_rat %>% mutate(gene_name = orth.rats[match(pheno_Multi_rat$gene, orth.rats$rnorvegicus_homolog_ensembl_gene),2]$external_gene_name)\n```\n:::\n\n\n\n# Enrichment Analysis\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::source_gist(\"38431b74c6c0bf90c12f\")\ndevtools::source_gist(\"1e9053c8f35c30396429350a08f33ea7\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_df <- full_df %>% mutate(gene_name = orth.rats[match(full_df$gene, orth.rats$rnorvegicus_homolog_ensembl_gene), 2]$external_gene_name)\n\n\nqqunif(BMI_genes$pvalue, col= \"maroon1\" )\ncolnames(pheno_Multi_humans)[2] <- \"pvalue_BMI\"\nBMI_genes_rats <- full_df %>% filter(metabolic_trait == \"Body Mass Index (BMI) with tail\")  %>% filter(pvalue <= 0.05) %>% .[[\"gene_name\"]]\nqqpoints(BMI_genes %>% filter(gene_name %in% BMI_genes_rats) %>% .[[\"pvalue\"]],pch='+', col = \"dodgerblue\") \n\n\nqqunif(height_genes$pvalue, col = \"maroon1\")\nheight_genes_rats <- full_df %>% filter(metabolic_trait == \"Body length including tail\") %>% filter(pvalue <= 0.05) %>% .[[\"gene_name\"]]\nqqpoints(height_genes %>% filter(gene_name %in% height_genes_rats) %>% .[[\"pvalue\"]],pch='+', col=\"dodgerblue\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqqunif(BMI_genes$pvalue, col= \"maroon1\") \nBMI_genes_rats <- pheno_Multi_rat  %>% filter(pvalue.bmi_bodylength_wo_tail <= 0.05) %>% .[[\"gene_name\"]] %>% na.omit()\nqqpoints(BMI_genes %>% filter(gene_name %in% BMI_genes_rats) %>% .[[\"pvalue\"]],pch='+', col=\"dodgerblue\") \n\nqqunif(height_genes$pvalue, col= \"maroon1\")\nheight_genes_rats <- pheno_Multi_rat %>% filter(pvalue.bodylength_w_tail <= 0.05) %>% .[[\"gene_name\"]] %>% na.omit()\nqqpoints(height_genes %>% filter(gene_name %in% height_genes_rats) %>% .[[\"pvalue\"]],pch='+', col=\"dodgerblue\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_bmi_genes <- BMI_genes %>% mutate(in_rats = ifelse(BMI_genes$gene_name %in% BMI_genes_rats, 1, 0))\n\nall_height_genes <- height_genes %>% mutate(in_rats = ifelse(height_genes$gene_name %in% height_genes_rats, 1, 0))\n  \nwilcox.test(pvalue ~ in_rats, data=all_bmi_genes) \nwilcox.test(pvalue ~ in_rats, data=all_height_genes) \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}