{
  "hash": "e548befe0e4400b7aabe7a074876e62b",
  "result": {
    "markdown": "---\ntitle: \"10.PTRS_simulation_weights\"\nauthor: \"Natasha Santhanam\"\ndate: \"6/26/2022\"\noutput: html_document\n---\n\n\n\n\n## Check Simulation of Different Weights for PTRS correlation with observed trait\n\nRead in files\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweights <-  read_tsv(\"/Users/natashasanthanam/Downloads/weights.height.annot.tsv\")  \nweights <- read_tsv(\"/Users/natashasanthanam/Downloads/weights.bmi.annot.tsv\")\npred_expr <- fread(\"/Users/natashasanthanam/Box/imlab-data/data-Github/web-data/2022-06-23-improving-figure-for-rat-ptrs/rat_metabolic_Ac_best__predict.txt\") %>% select(-c(FID))\n\npred_expr <- pred_expr %>% select(c(IID, intersect(colnames(pred_expr), orth.rats$rnorvegicus_homolog_ensembl_gene) ))\n\n\n#change name to human ensembl id in humans\ncolnames(pred_expr)[2:ncol(pred_expr)] <- orth.rats[match(colnames(pred_expr)[2:ncol(pred_expr)], orth.rats$rnorvegicus_homolog_ensembl_gene), 1] %>% .[[\"ensembl_gene_id\"]]\n```\n:::\n\n\n\n# First create data frame of weights for 100 variations\nWe will use model 35 for the simulation for height\n\n::: {.cell}\n\n```{.r .cell-code}\nperm_weights_height <- matrix(0, nrow = nrow(weights), ncol = 100)\n\nfor(i in 1:ncol(perm_weights_height)) {\n  j = sample(c(-1,1),nrow(weights),replace=T)\n  df = weights[,38]*j\n  perm_weights_height[,i] = df$model_36\n}\n\nperm_weights_height <- cbind(weights$model_36, perm_weights_height)\nperm_weights_height <- as.data.frame(perm_weights_height) \nperm_weights_height <- perm_weights_height %>% mutate(gene_name = weights$gene_name, .before = colnames(perm_weights_height)[1])\ncolnames(perm_weights_height)[1:2] = c(\"gene_name\", \"obs_weights\")\n```\n:::\n\n\n\nWe will also use model 17 for BMI - since it produced the largest correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nperm_weights_bmi <- matrix(0, nrow = nrow(weights), ncol = 100)\n\nfor(i in 1:ncol(perm_weights_bmi)) {\n  j = sample(c(-1,1),nrow(weights),replace=T)\n  df = weights[,19]*j\n  perm_weights_bmi[,i] = df$model_17\n}\n\nperm_weights_bmi <- cbind(weights$model_17, perm_weights_bmi)\nperm_weights_bmi <- as.data.frame(perm_weights_bmi) \nperm_weights_bmi <- perm_weights_bmi %>% mutate(gene_name = weights$gene_name, .before = colnames(perm_weights_bmi)[1])\ncolnames(perm_weights_bmi)[1:2] = c(\"gene_name\", \"obs_weights\")\n```\n:::\n\n\n\n# Create predicted trait for sign-permuted weights\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred_expr <- as.data.frame(pred_expr)\npred_height <- fn_generate_trait(pred_expr, perm_weights_height)\npred_bmi <- fn_generate_trait(pred_expr, perm_weights_bmi)\n```\n:::\n\n\n# Compare all values across different weight sign permuations to actual BMI and Height\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred_height <- readRDS(\"/Users/natashasanthanam/Downloads/PTRS_simulation_random_sign_weights_height.RDS\")\npred_bmi <- readRDS(\"/Users/natashasanthanam/Downloads/PTRS_simulation_random_sign_weights_bmi.RDS\")\nall_rats <- read_tsv(dir %&% \"all_names.txt\", col_names = TRUE)\n\npheno <- read_csv(dir %&% \"processed_obesity_rat_Palmer_phenotypes.csv\")\npheno <- pheno %>% filter(!(rat_rfid  %in% all_rats$ID))\n```\n:::\n\n# Check correlation between observed bodylength and permuted sign weights\nBodylength with tail\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Bodylength wit Tail vs predicted Height from Human PTRS weights\nbodylength_w_tail <- pheno %>% dplyr::select(c(rat_rfid, bodylength_w_tail)) %>% na.omit()\ntempo <- pred_height[na.omit(match(bodylength_w_tail$rat_rfid, rownames(pred_height))), ]\n\nbodylength_w_tail_cor_perm <- data.frame(cor = numeric(), pvalue = numeric(), perm = character(), conf.int.min = numeric(), conf.int.max = numeric())\nfor(i in 1:ncol(tempo)){\n  bodylength_w_tail_cor_perm[i,1] <- cor.test(bodylength_w_tail$bodylength_w_tail, tempo[,i])$estimate\n  bodylength_w_tail_cor_perm[i,2] <- cor.test(bodylength_w_tail$bodylength_w_tail, tempo[,i])$p.value\n  bodylength_w_tail_cor_perm[i,3] <- ifelse(i ==1, \"true_weight\", paste(\"perm\", i-1, sep = \"_\"))\n  bodylength_w_tail_cor_perm[i,4] <- cor.test(bodylength_w_tail$bodylength_w_tail, tempo[,i])$conf.int[1]\n  bodylength_w_tail_cor_perm[i,5] <- cor.test(bodylength_w_tail$bodylength_w_tail, tempo[,i])$conf.int[2]\n}\n```\n:::\n\n\n\nBMI\n\n::: {.cell}\n\n```{.r .cell-code}\nbmi_with_tail <- pheno %>% dplyr::select(c(rat_rfid, bmi_bodylength_w_tail)) %>% na.omit()\ntempo <- pred_bmi[na.omit(match(bmi_with_tail$rat_rfid, rownames(pred_bmi))), ]\n\nbmi_w_tail_cor <- data.frame(cor = numeric(), pvalue = numeric(), perm = character(), conf.int.min = numeric(), conf.int.max = numeric())\nfor(i in 1:ncol(tempo)){\n  bmi_w_tail_cor[i,1] <- cor.test(bmi_with_tail$bmi_bodylength_w_tail, tempo[,i])$estimate\n  bmi_w_tail_cor[i,2] <- cor.test(bmi_with_tail$bmi_bodylength_w_tail, tempo[,i])$p.value\n  bmi_w_tail_cor[i,3] <-  ifelse(i ==1, \"true_weight\", paste(\"perm\", i-1, sep = \"_\"))\n  bmi_w_tail_cor[i,4] <- cor.test(bmi_with_tail$bmi_bodylength_w_tail, tempo[,i])$conf.int[1]\n  bmi_w_tail_cor[i,5] <- cor.test(bmi_with_tail$bmi_bodylength_w_tail, tempo[,i])$conf.int[2]\n}\n```\n:::\n\n\n\n# Compare performance of permuted weights with true weight\nHeight\n\n::: {.cell}\n\n```{.r .cell-code}\nbodylength_w_tail_cor_perm <- bodylength_w_tail_cor_perm %>% mutate(iteration = seq(1,101,1))\n\nggplot(bodylength_w_tail_cor_perm, aes(iteration, cor))  + geom_errorbar(aes(ymin = conf.int.min, ymax = conf.int.max ), width=0.2,  color=\"gray48\") + geom_point(col = ifelse(bodylength_w_tail_cor_perm$perm == \"true_weight\", \"dodgerblue2\", \"black\")) + ylab(\"Correlation Coefficient (r)\") + xlab(\"Permutation with Random Sign Weights for Height\")\n\nbodylength_w_tail_cor_perm <- bodylength_w_tail_cor_perm %>% mutate(weight_type = ifelse(perm == \"true_weight\", \"true weight\", \"permutation\"))\nggplot(bodylength_w_tail_cor_perm, aes(x=cor, color=weight_type)) +\n  geom_histogram(fill = \"white\") + xlab(\"Correlation coefficient for bodylength\") \n```\n:::\n\n\nBMI\n\n::: {.cell}\n\n```{.r .cell-code}\nbmi_w_tail_cor <- bmi_w_tail_cor %>% mutate(iteration = seq(1,101,1))\nggplot(bmi_w_tail_cor, aes(iteration, cor))  + geom_errorbar(aes(ymin = conf.int.min, ymax = conf.int.max ), width=0.2,  color=\"gray48\") + geom_point(col = ifelse(bodylength_w_tail_cor_perm$perm == \"true_weight\", \"dodgerblue2\", \"black\")) + ylab(\"Correlation Coefficient (r)\") + xlab(\"Permutation with Random Sign Weights for BMI\")\n\nbmi_w_tail_cor <- bmi_w_tail_cor %>% mutate(weight_type = ifelse(perm == \"true_weight\", \"true weight\", \"permutation\"))\nggplot(bmi_w_tail_cor, aes(x=cor, color=weight_type)) +\n  geom_histogram(fill = \"white\") + xlab(\"Correlation coefficient for BMI\") \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}